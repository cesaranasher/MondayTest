{"ast":null,"code":"import fs from 'fs';\nimport * as process from 'process';\nimport { isDefined } from '../types/guards.js';\nimport { isLocalEnvironment } from '../utils/env.js';\nimport { Logger } from '../utils/logger.js';\nimport { snakeCase } from '../utils/string-manipulations.js';\nvar logger = new Logger('EnvironmentVariablesManager', {\n  mondayInternal: true\n});\n\nvar readEnvironmentData = function () {\n  var _a;\n\n  var environmentDataFileName = (_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.SECRET_NAME;\n\n  if (!isDefined(environmentDataFileName)) {\n    logger.error('[EnvironmentVariablesManager] Environment file name is not defined');\n    return;\n  }\n\n  var environmentDataFilePath = \"/secrets/\".concat(environmentDataFileName);\n  var isEnvironmentFileExists = fs.existsSync(environmentDataFilePath);\n\n  if (!isEnvironmentFileExists) {\n    logger.error('[EnvironmentVariablesManager] Environment file does not exist in path');\n    return;\n  }\n\n  var environmentData = fs.readFileSync(environmentDataFilePath, 'utf8');\n\n  try {\n    return JSON.parse(environmentData);\n  } catch (error) {\n    logger.error('[EnvironmentVariablesManager] Corrupted Environment file. File is not in JSON format');\n    return;\n  }\n};\n\nvar EnvironmentVariablesManager =\n/** @class */\nfunction () {\n  function EnvironmentVariablesManager(options) {\n    this.shouldUpdateProcessEnv = !!(options === null || options === void 0 ? void 0 : options.updateProcessEnv);\n    this.initEnv(options);\n\n    if (isLocalEnvironment()) {\n      logger.info('[EnvironmentVariablesManager] Running in development environment, Using process.env', {\n        mondayInternal: false\n      });\n    }\n  }\n\n  EnvironmentVariablesManager.prototype.initEnvIfNeeded = function (options) {\n    var _a;\n\n    var shouldInvalidate = (_a = options === null || options === void 0 ? void 0 : options.invalidate) !== null && _a !== void 0 ? _a : true;\n\n    if (shouldInvalidate || !this.cachedEnvironmentData) {\n      this.initEnv();\n    }\n  };\n\n  EnvironmentVariablesManager.prototype.initEnv = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (isLocalEnvironment()) {\n      this.cachedEnvironmentData = process.env;\n      return;\n    }\n\n    var updateProcessEnv = options.updateProcessEnv;\n    this.shouldUpdateProcessEnv = updateProcessEnv !== null && updateProcessEnv !== void 0 ? updateProcessEnv : this.shouldUpdateProcessEnv;\n    this.cachedEnvironmentData = readEnvironmentData();\n\n    if (!isDefined(this.cachedEnvironmentData)) {\n      return;\n    }\n\n    if (this.shouldUpdateProcessEnv) {\n      Object.entries(this.cachedEnvironmentData).forEach(function (_a) {\n        var key = _a[0],\n            value = _a[1];\n        var snakeCaseKey = snakeCase(key, {\n          upperCase: true\n        });\n        process.env[snakeCaseKey] = value;\n      });\n    }\n\n    logger.info('[EnvironmentVariablesManager] Initialized environment variables data', {\n      mondayInternal: true\n    });\n  };\n\n  EnvironmentVariablesManager.prototype.getKeys = function (options) {\n    this.initEnvIfNeeded(options);\n\n    if (!isDefined(this.cachedEnvironmentData)) {\n      logger.error('[EnvironmentVariablesManager.getKeys] There is an issue with loading keys', {\n        mondayInternal: false\n      });\n      return [];\n    }\n\n    return Object.keys(this.cachedEnvironmentData);\n  };\n\n  EnvironmentVariablesManager.prototype.get = function (key, options) {\n    this.initEnvIfNeeded(options);\n\n    if (!isDefined(this.cachedEnvironmentData)) {\n      logger.error('[EnvironmentVariablesManager.get] There is an issue with loading data for key', {\n        mondayInternal: false\n      });\n      return null;\n    }\n\n    return this.cachedEnvironmentData[key] || process.env[key];\n  };\n\n  return EnvironmentVariablesManager;\n}();\n\nexport { EnvironmentVariablesManager };","map":{"version":3,"mappings":"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","names":["fs","process","isDefined","isLocalEnvironment","Logger","snakeCase","logger","mondayInternal","readEnvironmentData","environmentDataFileName","env","_a","SECRET_NAME","error","environmentDataFilePath","isEnvironmentFileExists","existsSync","environmentData","readFileSync","JSON","parse","options","shouldUpdateProcessEnv","updateProcessEnv","initEnv","info","EnvironmentVariablesManager","shouldInvalidate","invalidate","cachedEnvironmentData","Object","entries","forEach","key","value","snakeCaseKey","upperCase","initEnvIfNeeded","keys"],"sourceRoot":"","sources":["../../../lib/environment-variables-manager/environment-variables-manager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}